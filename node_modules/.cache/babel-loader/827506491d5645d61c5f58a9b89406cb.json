{"remainingRequest":"/Users/wujian/2019项目/demo/countdown/node_modules/babel-loader/lib/index.js!/Users/wujian/2019项目/demo/countdown/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wujian/2019项目/demo/countdown/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wujian/2019项目/demo/countdown/src/components/lineChartPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wujian/2019项目/demo/countdown/src/components/lineChartPanel.vue","mtime":1564995460152},{"path":"/Users/wujian/2019项目/demo/countdown/node_modules/cache-loader/dist/cjs.js","mtime":1564995541627},{"path":"/Users/wujian/2019项目/demo/countdown/node_modules/babel-loader/lib/index.js","mtime":1564995537574},{"path":"/Users/wujian/2019项目/demo/countdown/node_modules/cache-loader/dist/cjs.js","mtime":1564995541627},{"path":"/Users/wujian/2019项目/demo/countdown/node_modules/vue-loader/lib/index.js","mtime":1564995542110}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { resetFontSize } from \"../utils/chart\";\nexport default {\n  name: \"LineChartPanel\",\n  props: {\n    title: String,\n    className: String\n  },\n  data: function data() {\n    return {\n      legendData: [],\n      chartOption: {\n        settings: {\n          metrics: ['TPS'],\n          dimension: ['DATE']\n        },\n        grid: {\n          top: '10%',\n          bottom: 0,\n          right: '3%'\n        },\n        legend: {\n          show: false\n        },\n        color: ['#FFC54D'],\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: '#333380'\n            }\n          },\n          axisLabel: {\n            fontSize: resetFontSize(14),\n            textStyle: {\n              color: '#858DB2'\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLine: {\n            lineStyle: {\n              color: '#333380'\n            }\n          },\n          axisLabel: {\n            fontSize: resetFontSize(14),\n            textStyle: {\n              color: '#858DB2'\n            }\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#333380'\n            }\n          }\n        }\n      },\n      chartData: {\n        columns: ['DATE', 'TPS'],\n        rows: [{\n          'DATE': '08:00',\n          'TPS': 1393\n        }, {\n          'DATE': '09:00',\n          'TPS': 3530\n        }, {\n          'DATE': '10:00',\n          'TPS': 2923\n        }, {\n          'DATE': '11:00',\n          'TPS': 1723\n        }, {\n          'DATE': '12:00',\n          'TPS': 3792\n        }, {\n          'DATE': '13:00',\n          'TPS': 4593\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.FormatLegendData(this.chartOption);\n  },\n  methods: {\n    FormatLegendData: function FormatLegendData(data) {\n      var arr = [];\n      data.settings.metrics.forEach(function (item, index) {\n        arr.push({\n          name: item,\n          color: data.color[index]\n        });\n      });\n      this.legendData = arr;\n    }\n  }\n};",{"version":3,"sources":["lineChartPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,SAAA,aAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA;AACA,QAAA,QAAA,EAAA;AACA,UAAA,OAAA,EAAA,CAAA,KAAA,CADA;AAEA,UAAA,SAAA,EAAA,CAAA,MAAA;AAFA,SADA;AAKA,QAAA,IAAA,EAAA;AACA,UAAA,GAAA,EAAA,KADA;AAEA,UAAA,MAAA,EAAA,CAFA;AAGA,UAAA,KAAA,EAAA;AAHA,SALA;AAUA,QAAA,MAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SAVA;AAaA,QAAA,KAAA,EAAA,CAAA,SAAA,CAbA;AAcA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,WAAA,EAAA,KAFA;AAGA,UAAA,QAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AADA,WAHA;AAQA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,aAAA,CAAA,EAAA,CADA;AAEA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AAFA;AARA,SAdA;AA6BA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,QAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AADA,WAFA;AAOA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA,aAAA,CAAA,EAAA,CADA;AAEA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AAFA,WAPA;AAaA,UAAA,SAAA,EAAA;AACA,YAAA,IAAA,EAAA,IADA;AAEA,YAAA,SAAA,EAAA;AACA,cAAA,KAAA,EAAA;AADA;AAFA;AAbA;AA7BA,OAFA;AAoDA,MAAA,SAAA,EAAA;AACA,QAAA,OAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CADA;AAEA,QAAA,IAAA,EAAA,CACA;AAAA,kBAAA,OAAA;AAAA,iBAAA;AAAA,SADA,EAEA;AAAA,kBAAA,OAAA;AAAA,iBAAA;AAAA,SAFA,EAGA;AAAA,kBAAA,OAAA;AAAA,iBAAA;AAAA,SAHA,EAIA;AAAA,kBAAA,OAAA;AAAA,iBAAA;AAAA,SAJA,EAKA;AAAA,kBAAA,OAAA;AAAA,iBAAA;AAAA,SALA,EAMA;AAAA,kBAAA,OAAA;AAAA,iBAAA;AAAA,SANA;AAFA;AApDA,KAAA;AAgEA,GAvEA;AAwEA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,gBAAA,CAAA,KAAA,WAAA;AACA,GA1EA;AA2EA,EAAA,OAAA,EAAA;AACA,IAAA,gBAAA,EAAA,0BAAA,IAAA,EAAA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,MAAA,IAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,QAAA,GAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA;AAFA,SAAA;AAIA,OALA;AAMA,WAAA,UAAA,GAAA,GAAA;AACA;AAVA;AA3EA,CAAA","sourcesContent":["<template>\n  <div :class=\"[$style.panel,className]\">\n    <div :class=\"$style.panelHeader\">{{ title }}</div>\n    <div :class=\"$style.panelBody\">\n      <VeLine\n        :data=\"chartData\"\n        :settings=\"chartOption.settings\"\n        :colors=\"chartOption.color\"\n        :xAxis=\"chartOption.xAxis\"\n        :yAxis=\"chartOption.yAxis\"\n        :grid=\"chartOption.grid\"\n        :legend=\"chartOption.legend\"\n        :height=\"'100%'\"\n      />\n    </div>\n    <div :class=\"$style.panelFooter\">\n      <ul\n        :class=\"$style.labelRow\"\n        v-for=\"(item,index) in legendData\"\n        :key=\"index\"\n      >\n        <li :class=\"$style.labelCol\">\n          <div :class=\"$style.labelItem\">\n            <div :class=\"$style.labelItemLegend\" :style=\"{background:item.color}\"></div>\n            {{ item.name }}\n          </div>\n        </li>\n        <li :class=\"$style.labelCol\">\n          <div :class=\"$style.labelItem\">\n            高峰值\n            <span :class=\"$style.labelItemCont\" :style=\"{color:item.color}\">17418</span>\n          </div>\n        </li>\n        <li :class=\"$style.labelCol\">\n          <div :class=\"$style.labelItem\">\n            平均值\n            <span :class=\"$style.labelItemCont\" :style=\"{color:item.color}\">17418</span>\n          </div>\n        </li>\n        <li :class=\"$style.labelCol\">\n          <div :class=\"$style.labelItem\">\n            当前值\n            <span :class=\"$style.labelItemCont\" :style=\"{color:item.color}\">17418</span>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { resetFontSize } from '../utils/chart';\nexport default {\n  name: \"LineChartPanel\",\n  props: {\n    title: String,\n    className: String\n  },\n  data () {\n    return {\n      legendData: [],\n      chartOption:{\n        settings: {\n          metrics: ['TPS'],\n          dimension: ['DATE']\n        },\n        grid: {\n          top: '10%',\n          bottom: 0,\n          right: '3%',\n        },\n        legend: {\n          show: false\n        },\n        color: ['#FFC54D'],\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: '#333380'\n            }\n          },\n          axisLabel:{\n            fontSize:resetFontSize(14),\n            textStyle:{\n              color: '#858DB2'\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLine: {\n            lineStyle: {\n              color: '#333380'\n            }\n          },\n          axisLabel:{\n            fontSize:resetFontSize(14),\n            textStyle:{\n              color: '#858DB2'\n            }\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#333380'\n            }\n          }\n        },\n      },\n      chartData: {\n        columns: ['DATE', 'TPS'],\n        rows: [\n          { 'DATE': '08:00', 'TPS': 1393 },\n          { 'DATE': '09:00', 'TPS': 3530 },\n          { 'DATE': '10:00', 'TPS': 2923 },\n          { 'DATE': '11:00', 'TPS': 1723 },\n          { 'DATE': '12:00', 'TPS': 3792 },\n          { 'DATE': '13:00', 'TPS': 4593 }\n        ]\n      }\n    }\n  },\n  created:function(){\n    this.FormatLegendData(this.chartOption)\n  },\n  methods: {\n    FormatLegendData: function(data){\n      let arr = [];\n      data.settings.metrics.forEach((item,index) => {\n        arr.push({\n          name: item,\n          color: data.color[index]\n        })\n      });\n      this.legendData = arr;\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" module>\n  .panel{\n    display: flex;\n    flex-direction: column;\n    border: 1px solid $borderColor;\n    .panelHeader,\n    .panelBody,\n    .panelFooter{\n      padding: rem(15) rem(20);\n    }\n    .panelHeader{\n      font-size: rem(24);\n      & + .panelBody{\n        padding-top: 0;\n      }\n    }\n    .panelBody{\n      flex: 1;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n    .panelFooter{\n      border-top: 1px solid $borderColor;\n      .labelRow{\n        margin: 0 rem(-10);\n        display: flex;\n        .labelCol{\n          padding: 0 rem(10);\n          &:first-child{\n            flex: 1;\n          }\n        }\n        .labelItem{\n          font-size: rem(16);\n          display: flex;\n          align-items: center;\n          .labelItemLegend{\n            width: rem(40);\n            height: rem(12);\n            background: $brandPrimary;\n            margin-right: rem(20);\n          }\n          .labelItemCont{\n            margin-left: rem(10);\n          }\n          & + .labelItem{\n            margin-top: rem(6);\n          }\n        }\n      }\n    }\n  }\n</style>\n\n"],"sourceRoot":"src/components"}]}